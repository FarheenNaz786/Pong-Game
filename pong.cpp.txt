//pong.cpp
#include <SFML/Graphics.hpp>
#include <sstream>
#include "bat.h"
#include "ball.h"
using namespace sf;
int main()
{
    //create videomode object
    VideoMode vm(1920,1080);
    //create window
    RenderWindow window(vm, "Pong!!", Style::Fullscreen);

    //create a bat
    Bat bat(1366/2.0, 768-20);

    //create a ball
    Ball ball(1366/2, 0);


    //create hud(heads up display)
    Text hud;
    Font font;
    font.loadFromFile("font/DS-DIGI.TTF");
    hud.setFont(font);
    hud.setFillColor(Color::White);
    hud.setCharacterSize(75);
    hud.setString("Score : 0  Lives : 3");
    hud.setPosition(20,20);

    //Initialize score and time
    int score=0;
    int lives=3;


    //manage time
    Clock clock;

    //main loop
    while(window.isOpen())
    {
        Event event;
        while(window.pollEvent(event))
        {
            if(event.type == Event::Closed)
            {   
                window.close();
            }

        }
        //handle quitting game
    if(Keyboard::isKeyPressed(Keyboard::Escape))
    {
        window.close();
    }
    //handle the right cursor
    if(Keyboard::isKeyPressed(Keyboard::Right))
    {
        if(bat.get_Position().left + bat.get_Position().width > 1366)
        {
            bat.stopRight();
        }
        else
        {
            bat.moveRight();
        }
    }
    else
    {
        bat.stopRight();
    }

    //handle the left cursor
    if(Keyboard::isKeyPressed(Keyboard::Left))
    {
        if(bat.get_Position().left < 0)
        {
            bat.stopLeft();
        }
        else
        {
            bat.moveLeft();
        }
    }
    else{
        bat.stopLeft();
    }
    
    //update time
    Time dt = clock.restart();

    //update the bat
    bat.update(dt);

    //update the ball
    ball.update(dt);


    //update the score
    std::stringstream ss;
    ss << "Score:" << score << "Lives: " << lives;
    hud.setString(ss.str());
    
    //ball hitting the bottom
    if(ball.get_Position().top > window.getSize().y)
    {
        //reverse the ball direction
        ball.reboundBottom();
        //reducing lives
        lives--;
        if(lives<1)
        {
            //reset score
            score=0;
            lives=3;
        }
    }
    //ball hitting the top
    if(ball.get_Position().top < 0)
    {
        //add score
        
        ball.reboundBatOrTop();
        score++;
    }

    //ball hitting the sides
    if(ball.get_Position().left < 0 || ball.get_Position().left+10 > window.getSize().x)
    {
        ball.reboundSides();
    }

    //ball hitting the bat
    if(ball.get_Position().intersects(bat.get_Position()))
    {
        //hit detected so reverse the ball and score a point
        ball.reboundBatOrTop();
        score++;
    }
    
    //display
    window.clear();
    window.draw(hud);
    window.draw(bat.get_Shape());
    window.draw(ball.get_Shape());
    window.display();
}

    return 0;


}